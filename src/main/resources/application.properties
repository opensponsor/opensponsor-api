quarkus.profile=prod,dev
# datasource configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.url=jdbc:postgresql://127.0.0.1:5432/opensponsor
quarkus.datasource.jdbc.max-size=16
quarkus.http.cors=true
quarkus.http.cors.access-control-allow-credentials=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,PUT,POST,DELETE,OPTIONS
#quarkus.http.cors.headers=X-Custom
#quarkus.http.cors.exposed-headers=Content-Disposition
#quarkus.http.cors.access-control-max-age=24H
#quarkus.http.cors.access-control-allow-credentials=true

# drop-and-create drop and create the database at startup (use `update`  to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create
# drop-and-create
quarkus.hibernate-orm.log.sql=false
quarkus.hibernate-orm.physical-naming-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy


mp.jwt.verify.publickey.location=jwt/publicKey.pem
mp.jwt.verify.issuer=https://opensponsor.com
quarkus.native.resources.includes=jwt/publicKey.pem
smallrye.jwt.sign.key.location=jwt/privateKey.pem


alioss.domain=https://visionbagel.oss-cn-beijing.aliyuncs.com
# %dev.alipay.notify-url=""
%dev.alipay.return-url=http://localhost:5173/payment

%prod.alipay.notify-url=http://api.visionbagel.com/payment/notify
%prod.alipay.return-url=https://visionbagel.com/payment
